   Compiling comp v0.1.0 (D:\work\rust\comp)
error: failed to run custom build command for `comp v0.1.0 (D:\work\rust\comp)`

Caused by:
  process didn't exit successfully: `D:\work\rust\comp\target\debug\build\comp-7ebe3f4b56b7e817\build-script-build` (exit code: 1)
  --- stdout
  processing file `D:\work\rust\comp\src\grammer.lalrpop`
  D:\work\rust\comp\src\grammer.lalrpop:87:5: 91:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "!=" Expr "!=" Expr

    They could be reduced like so:
      Expr "!=" Expr "!=" Expr
      ├─Expr───────┘         │
      └─Expr─────────────────┘

    Alternatively, they could be reduced like so:
      Expr "!=" Expr "!=" Expr
      │         └─Expr───────┤
      └─Expr─────────────────┘

    Hint: This looks like a precedence error related to `Expr`. See the LALRPOP
    manual for advice on encoding precedence.

  D:\work\rust\comp\src\grammer.lalrpop:87:5: 91:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "!=" Expr "+" Term

    They could be reduced like so:
      Expr "!=" Expr "+" Term
      ├─Expr───────┘        │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr "!=" Expr "+" Term
      │         └─Expr──────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:87:5: 91:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "!=" Expr "-" Term

    They could be reduced like so:
      Expr "!=" Expr "-" Term
      ├─Expr───────┘        │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr "!=" Expr "-" Term
      │         └─Expr──────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:87:5: 91:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "!=" Expr "<" Expr

    They could be reduced like so:
      Expr "!=" Expr "<" Expr
      ├─Expr───────┘        │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr "!=" Expr "<" Expr
      │         └─Expr──────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:87:5: 91:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "!=" Expr "<=" Expr

    They could be reduced like so:
      Expr "!=" Expr "<=" Expr
      ├─Expr───────┘         │
      └─Expr─────────────────┘

    Alternatively, they could be reduced like so:
      Expr "!=" Expr "<=" Expr
      │         └─Expr───────┤
      └─Expr─────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:87:5: 91:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "!=" Expr "==" Expr

    They could be reduced like so:
      Expr "!=" Expr "==" Expr
      ├─Expr───────┘         │
      └─Expr─────────────────┘

    Alternatively, they could be reduced like so:
      Expr "!=" Expr "==" Expr
      │         └─Expr───────┤
      └─Expr─────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:87:5: 91:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "!=" Expr ">" Expr

    They could be reduced like so:
      Expr "!=" Expr ">" Expr
      ├─Expr───────┘        │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr "!=" Expr ">" Expr
      │         └─Expr──────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:87:5: 91:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "!=" Expr ">=" Expr

    They could be reduced like so:
      Expr "!=" Expr ">=" Expr
      ├─Expr───────┘         │
      └─Expr─────────────────┘

    Alternatively, they could be reduced like so:
      Expr "!=" Expr ">=" Expr
      │         └─Expr───────┤
      └─Expr─────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:52:5: 56:6: Conflict detected

      when in this state:
    Expr = Expr "+" Term (*) ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Term = Term (*) "*" Factor ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Term = Term (*) "/" Factor ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]

    and looking at a token `"*"` we can reduce to a `Expr` but we can also shift

  D:\work\rust\comp\src\grammer.lalrpop:52:5: 56:6: Conflict detected

      when in this state:
    Expr = Expr "+" Term (*) ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Term = Term (*) "*" Factor ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Term = Term (*) "/" Factor ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]

    and looking at a token `"/"` we can reduce to a `Expr` but we can also shift

  D:\work\rust\comp\src\grammer.lalrpop:57:5: 61:6: Conflict detected

      when in this state:
    Expr = Expr "-" Term (*) ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Term = Term (*) "*" Factor ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Term = Term (*) "/" Factor ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]

    and looking at a token `"*"` we can reduce to a `Expr` but we can also shift

  D:\work\rust\comp\src\grammer.lalrpop:57:5: 61:6: Conflict detected

      when in this state:
    Expr = Expr "-" Term (*) ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Term = Term (*) "*" Factor ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Term = Term (*) "/" Factor ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]

    and looking at a token `"/"` we can reduce to a `Expr` but we can also shift

  D:\work\rust\comp\src\grammer.lalrpop:62:5: 66:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "<" Expr "!=" Expr

    They could be reduced like so:
      Expr "<" Expr "!=" Expr
      ├─Expr──────┘         │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr "<" Expr "!=" Expr
      │        └─Expr───────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:62:5: 66:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "<" Expr "+" Term

    They could be reduced like so:
      Expr "<" Expr "+" Term
      ├─Expr──────┘        │
      └─Expr───────────────┘

    Alternatively, they could be reduced like so:
      Expr "<" Expr "+" Term
      │        └─Expr──────┤
      └─Expr───────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:62:5: 66:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "<" Expr "-" Term

    They could be reduced like so:
      Expr "<" Expr "-" Term
      ├─Expr──────┘        │
      └─Expr───────────────┘

    Alternatively, they could be reduced like so:
      Expr "<" Expr "-" Term
      │        └─Expr──────┤
      └─Expr───────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:62:5: 66:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "<" Expr "<" Expr

    They could be reduced like so:
      Expr "<" Expr "<" Expr
      ├─Expr──────┘        │
      └─Expr───────────────┘

    Alternatively, they could be reduced like so:
      Expr "<" Expr "<" Expr
      │        └─Expr──────┤
      └─Expr───────────────┘

    Hint: This looks like a precedence error related to `Expr`. See the LALRPOP
    manual for advice on encoding precedence.

  D:\work\rust\comp\src\grammer.lalrpop:62:5: 66:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "<" Expr "<=" Expr

    They could be reduced like so:
      Expr "<" Expr "<=" Expr
      ├─Expr──────┘         │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr "<" Expr "<=" Expr
      │        └─Expr───────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:62:5: 66:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "<" Expr "==" Expr

    They could be reduced like so:
      Expr "<" Expr "==" Expr
      ├─Expr──────┘         │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr "<" Expr "==" Expr
      │        └─Expr───────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:62:5: 66:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "<" Expr ">" Expr

    They could be reduced like so:
      Expr "<" Expr ">" Expr
      ├─Expr──────┘        │
      └─Expr───────────────┘

    Alternatively, they could be reduced like so:
      Expr "<" Expr ">" Expr
      │        └─Expr──────┤
      └─Expr───────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:62:5: 66:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "<" Expr ">=" Expr

    They could be reduced like so:
      Expr "<" Expr ">=" Expr
      ├─Expr──────┘         │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr "<" Expr ">=" Expr
      │        └─Expr───────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:67:5: 71:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "<=" Expr "!=" Expr

    They could be reduced like so:
      Expr "<=" Expr "!=" Expr
      ├─Expr───────┘         │
      └─Expr─────────────────┘

    Alternatively, they could be reduced like so:
      Expr "<=" Expr "!=" Expr
      │         └─Expr───────┤
      └─Expr─────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:67:5: 71:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "<=" Expr "+" Term

    They could be reduced like so:
      Expr "<=" Expr "+" Term
      ├─Expr───────┘        │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr "<=" Expr "+" Term
      │         └─Expr──────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:67:5: 71:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "<=" Expr "-" Term

    They could be reduced like so:
      Expr "<=" Expr "-" Term
      ├─Expr───────┘        │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr "<=" Expr "-" Term
      │         └─Expr──────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:67:5: 71:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "<=" Expr "<" Expr

    They could be reduced like so:
      Expr "<=" Expr "<" Expr
      ├─Expr───────┘        │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr "<=" Expr "<" Expr
      │         └─Expr──────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:67:5: 71:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "<=" Expr "<=" Expr

    They could be reduced like so:
      Expr "<=" Expr "<=" Expr
      ├─Expr───────┘         │
      └─Expr─────────────────┘

    Alternatively, they could be reduced like so:
      Expr "<=" Expr "<=" Expr
      │         └─Expr───────┤
      └─Expr─────────────────┘

    Hint: This looks like a precedence error related to `Expr`. See the LALRPOP
    manual for advice on encoding precedence.

  D:\work\rust\comp\src\grammer.lalrpop:67:5: 71:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "<=" Expr "==" Expr

    They could be reduced like so:
      Expr "<=" Expr "==" Expr
      ├─Expr───────┘         │
      └─Expr─────────────────┘

    Alternatively, they could be reduced like so:
      Expr "<=" Expr "==" Expr
      │         └─Expr───────┤
      └─Expr─────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:67:5: 71:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "<=" Expr ">" Expr

    They could be reduced like so:
      Expr "<=" Expr ">" Expr
      ├─Expr───────┘        │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr "<=" Expr ">" Expr
      │         └─Expr──────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:67:5: 71:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "<=" Expr ">=" Expr

    They could be reduced like so:
      Expr "<=" Expr ">=" Expr
      ├─Expr───────┘         │
      └─Expr─────────────────┘

    Alternatively, they could be reduced like so:
      Expr "<=" Expr ">=" Expr
      │         └─Expr───────┤
      └─Expr─────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:82:5: 86:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "==" Expr "!=" Expr

    They could be reduced like so:
      Expr "==" Expr "!=" Expr
      ├─Expr───────┘         │
      └─Expr─────────────────┘

    Alternatively, they could be reduced like so:
      Expr "==" Expr "!=" Expr
      │         └─Expr───────┤
      └─Expr─────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:82:5: 86:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "==" Expr "+" Term

    They could be reduced like so:
      Expr "==" Expr "+" Term
      ├─Expr───────┘        │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr "==" Expr "+" Term
      │         └─Expr──────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:82:5: 86:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "==" Expr "-" Term

    They could be reduced like so:
      Expr "==" Expr "-" Term
      ├─Expr───────┘        │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr "==" Expr "-" Term
      │         └─Expr──────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:82:5: 86:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "==" Expr "<" Expr

    They could be reduced like so:
      Expr "==" Expr "<" Expr
      ├─Expr───────┘        │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr "==" Expr "<" Expr
      │         └─Expr──────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:82:5: 86:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "==" Expr "<=" Expr

    They could be reduced like so:
      Expr "==" Expr "<=" Expr
      ├─Expr───────┘         │
      └─Expr─────────────────┘

    Alternatively, they could be reduced like so:
      Expr "==" Expr "<=" Expr
      │         └─Expr───────┤
      └─Expr─────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:82:5: 86:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "==" Expr "==" Expr

    They could be reduced like so:
      Expr "==" Expr "==" Expr
      ├─Expr───────┘         │
      └─Expr─────────────────┘

    Alternatively, they could be reduced like so:
      Expr "==" Expr "==" Expr
      │         └─Expr───────┤
      └─Expr─────────────────┘

    Hint: This looks like a precedence error related to `Expr`. See the LALRPOP
    manual for advice on encoding precedence.

  D:\work\rust\comp\src\grammer.lalrpop:82:5: 86:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "==" Expr ">" Expr

    They could be reduced like so:
      Expr "==" Expr ">" Expr
      ├─Expr───────┘        │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr "==" Expr ">" Expr
      │         └─Expr──────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:82:5: 86:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr "==" Expr ">=" Expr

    They could be reduced like so:
      Expr "==" Expr ">=" Expr
      ├─Expr───────┘         │
      └─Expr─────────────────┘

    Alternatively, they could be reduced like so:
      Expr "==" Expr ">=" Expr
      │         └─Expr───────┤
      └─Expr─────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:72:5: 76:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr ">" Expr "!=" Expr

    They could be reduced like so:
      Expr ">" Expr "!=" Expr
      ├─Expr──────┘         │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr ">" Expr "!=" Expr
      │        └─Expr───────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:72:5: 76:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr ">" Expr "+" Term

    They could be reduced like so:
      Expr ">" Expr "+" Term
      ├─Expr──────┘        │
      └─Expr───────────────┘

    Alternatively, they could be reduced like so:
      Expr ">" Expr "+" Term
      │        └─Expr──────┤
      └─Expr───────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:72:5: 76:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr ">" Expr "-" Term

    They could be reduced like so:
      Expr ">" Expr "-" Term
      ├─Expr──────┘        │
      └─Expr───────────────┘

    Alternatively, they could be reduced like so:
      Expr ">" Expr "-" Term
      │        └─Expr──────┤
      └─Expr───────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:72:5: 76:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr ">" Expr "<" Expr

    They could be reduced like so:
      Expr ">" Expr "<" Expr
      ├─Expr──────┘        │
      └─Expr───────────────┘

    Alternatively, they could be reduced like so:
      Expr ">" Expr "<" Expr
      │        └─Expr──────┤
      └─Expr───────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:72:5: 76:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr ">" Expr "<=" Expr

    They could be reduced like so:
      Expr ">" Expr "<=" Expr
      ├─Expr──────┘         │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr ">" Expr "<=" Expr
      │        └─Expr───────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:72:5: 76:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr ">" Expr "==" Expr

    They could be reduced like so:
      Expr ">" Expr "==" Expr
      ├─Expr──────┘         │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr ">" Expr "==" Expr
      │        └─Expr───────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:72:5: 76:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr ">" Expr ">" Expr

    They could be reduced like so:
      Expr ">" Expr ">" Expr
      ├─Expr──────┘        │
      └─Expr───────────────┘

    Alternatively, they could be reduced like so:
      Expr ">" Expr ">" Expr
      │        └─Expr──────┤
      └─Expr───────────────┘

    Hint: This looks like a precedence error related to `Expr`. See the LALRPOP
    manual for advice on encoding precedence.

  D:\work\rust\comp\src\grammer.lalrpop:72:5: 76:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr ">" Expr ">=" Expr

    They could be reduced like so:
      Expr ">" Expr ">=" Expr
      ├─Expr──────┘         │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr ">" Expr ">=" Expr
      │        └─Expr───────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:77:5: 81:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr ">=" Expr "!=" Expr

    They could be reduced like so:
      Expr ">=" Expr "!=" Expr
      ├─Expr───────┘         │
      └─Expr─────────────────┘

    Alternatively, they could be reduced like so:
      Expr ">=" Expr "!=" Expr
      │         └─Expr───────┤
      └─Expr─────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:77:5: 81:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr ">=" Expr "+" Term

    They could be reduced like so:
      Expr ">=" Expr "+" Term
      ├─Expr───────┘        │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr ">=" Expr "+" Term
      │         └─Expr──────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:77:5: 81:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr ">=" Expr "-" Term

    They could be reduced like so:
      Expr ">=" Expr "-" Term
      ├─Expr───────┘        │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr ">=" Expr "-" Term
      │         └─Expr──────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:77:5: 81:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr ">=" Expr "<" Expr

    They could be reduced like so:
      Expr ">=" Expr "<" Expr
      ├─Expr───────┘        │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr ">=" Expr "<" Expr
      │         └─Expr──────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:77:5: 81:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr ">=" Expr "<=" Expr

    They could be reduced like so:
      Expr ">=" Expr "<=" Expr
      ├─Expr───────┘         │
      └─Expr─────────────────┘

    Alternatively, they could be reduced like so:
      Expr ">=" Expr "<=" Expr
      │         └─Expr───────┤
      └─Expr─────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:77:5: 81:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr ">=" Expr "==" Expr

    They could be reduced like so:
      Expr ">=" Expr "==" Expr
      ├─Expr───────┘         │
      └─Expr─────────────────┘

    Alternatively, they could be reduced like so:
      Expr ">=" Expr "==" Expr
      │         └─Expr───────┤
      └─Expr─────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:77:5: 81:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr ">=" Expr ">" Expr

    They could be reduced like so:
      Expr ">=" Expr ">" Expr
      ├─Expr───────┘        │
      └─Expr────────────────┘

    Alternatively, they could be reduced like so:
      Expr ">=" Expr ">" Expr
      │         └─Expr──────┤
      └─Expr────────────────┘

    LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for
    advice on making your grammar unambiguous.

  D:\work\rust\comp\src\grammer.lalrpop:77:5: 81:6: Ambiguous grammar detected

    The following symbols can be reduced in two ways:
      Expr ">=" Expr ">=" Expr

    They could be reduced like so:
      Expr ">=" Expr ">=" Expr
      ├─Expr───────┘         │
      └─Expr─────────────────┘

    Alternatively, they could be reduced like so:
      Expr ">=" Expr ">=" Expr
      │         └─Expr───────┤
      └─Expr─────────────────┘

    Hint: This looks like a precedence error related to `Expr`. See the LALRPOP
    manual for advice on encoding precedence.

  D:\work\rust\comp\src\grammer.lalrpop:87:5: 91:6: Conflict detected

      when in this state:
    Expr = Expr (*) "!=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr "!=" Expr (*) ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "+" Term ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "-" Term ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "<" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "<=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "==" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) ">" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) ">=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]

    and looking at a token `"!="` we can reduce to a `Expr` but we can also shift

  D:\work\rust\comp\src\grammer.lalrpop:87:5: 91:6: Conflict detected

      when in this state:
    Expr = Expr (*) "!=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr "!=" Expr (*) ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "+" Term ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "-" Term ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "<" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "<=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "==" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) ">" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) ">=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]

    and looking at a token `"+"` we can reduce to a `Expr` but we can also shift

  D:\work\rust\comp\src\grammer.lalrpop:87:5: 91:6: Conflict detected

      when in this state:
    Expr = Expr (*) "!=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr "!=" Expr (*) ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "+" Term ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "-" Term ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "<" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "<=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "==" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) ">" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) ">=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]

    and looking at a token `"-"` we can reduce to a `Expr` but we can also shift

  D:\work\rust\comp\src\grammer.lalrpop:87:5: 91:6: Conflict detected

      when in this state:
    Expr = Expr (*) "!=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr "!=" Expr (*) ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "+" Term ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "-" Term ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "<" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "<=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "==" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) ">" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) ">=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]

    and looking at a token `"<"` we can reduce to a `Expr` but we can also shift

  D:\work\rust\comp\src\grammer.lalrpop:87:5: 91:6: Conflict detected

      when in this state:
    Expr = Expr (*) "!=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr "!=" Expr (*) ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "+" Term ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "-" Term ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "<" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "<=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "==" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) ">" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) ">=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]

    and looking at a token `"<="` we can reduce to a `Expr` but we can also shift

  D:\work\rust\comp\src\grammer.lalrpop:87:5: 91:6: Conflict detected

      when in this state:
    Expr = Expr (*) "!=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr "!=" Expr (*) ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "+" Term ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "-" Term ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "<" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "<=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "==" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) ">" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) ">=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]

    and looking at a token `"=="` we can reduce to a `Expr` but we can also shift

  D:\work\rust\comp\src\grammer.lalrpop:87:5: 91:6: Conflict detected

      when in this state:
    Expr = Expr (*) "!=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr "!=" Expr (*) ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "+" Term ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "-" Term ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "<" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "<=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "==" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) ">" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) ">=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]

    and looking at a token `">"` we can reduce to a `Expr` but we can also shift

  D:\work\rust\comp\src\grammer.lalrpop:87:5: 91:6: Conflict detected

      when in this state:
    Expr = Expr (*) "!=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr "!=" Expr (*) ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "+" Term ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "-" Term ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "<" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "<=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) "==" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) ">" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]
    Expr = Expr (*) ">=" Expr ["!=", "(", ")", "*", "+", "-", "/", ";", "<", "<=", "==", ">", ">=", "if", "main", "while", "{", "}", r#"[0-9]+"#, r#"[a-zA-Z_][a-zA-Z0-9_]*"#, Eof]

    and looking at a token `">="` we can reduce to a `Expr` but we can also shift

